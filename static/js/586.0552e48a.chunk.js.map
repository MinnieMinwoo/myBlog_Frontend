{"version":3,"file":"static/js/586.0552e48a.chunk.js","mappings":"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","sources":["components/Share/AlertModal.tsx","components/Share/Toast.tsx","components/Write/OnWrite.tsx","components/Write/Preview.tsx","routes/Write.tsx","logic/useOnPreventLeave.ts","states/ModalState.tsx","states/ToastState.ts"],"sourcesContent":["import React from \"react\";\nimport { useModal } from \"../../states/ModalState\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ModalDialog = styled(Modal.Dialog)`\n  margin: 0;\n`;\n\nconst AlertModal = () => {\n  const { modalDataState, closeModal, closeModalWithCallback } = useModal();\n\n  return (\n    <Modal\n      size=\"lg\"\n      centered\n      show={modalDataState.isOpen}\n      onHide={modalDataState.isConfirm ? closeModal : closeModalWithCallback}\n      className=\"AlertModal\"\n    >\n      <ModalDialog>\n        <Modal.Header closeButton>\n          <Modal.Title>{modalDataState.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{modalDataState.content}</Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={modalDataState.isConfirm ? closeModal : closeModalWithCallback}\n          >\n            {modalDataState.isConfirm ? \"Cancel\" : \"Close\"}\n          </Button>\n          <Button\n            hidden={!modalDataState.isConfirm}\n            variant={modalDataState.buttonColor}\n            onClick={closeModalWithCallback}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </ModalDialog>\n    </Modal>\n  );\n};\n\nexport default AlertModal;\n","import React from \"react\";\nimport { Toast } from \"react-bootstrap\";\nimport { useToast } from \"../../states/ToastState\";\nimport styled from \"styled-components\";\n\nconst ToastContainer = styled(Toast)`\n  position: absolute;\n  top: 70px;\n  right: 40px;\n  z-index: 5;\n`;\n\nexport const AlertToast = () => {\n  const { toastDataState, closeToast } = useToast();\n  return (\n    <ToastContainer\n      onClose={() => {\n        closeToast();\n      }}\n      show={toastDataState.isOpen}\n      bg={toastDataState.background}\n      delay={3000}\n      autohide\n    >\n      <Toast.Header closeButton={false}>\n        <strong className=\"me-auto\">{toastDataState.title}</strong>\n      </Toast.Header>\n      <Toast.Body>{toastDataState.content}</Toast.Body>\n    </ToastContainer>\n  );\n};\n\nexport default AlertToast;\n","import React, { ChangeEvent, DragEvent, useState, useRef } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { loginData } from \"../../states/LoginState\";\nimport { uuidv4 } from \"@firebase/util\";\nimport MDEditor, { commands, ICommand } from \"@uiw/react-md-editor\";\nimport { Button, Container, Navbar, Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nimport { useModal } from \"../../states/ModalState\";\nimport { useToast } from \"../../states/ToastState\";\n\nimport { uploadImg } from \"../../logic/getSetImage\";\nimport blogIcon from \"../../assets/images/logo.png\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst OnDragCheck = styled.div`\n  &.Drag {\n    opacity: 0.3;\n  }\n`;\n\nconst WriteContainer = styled(Col)`\n  margin-top: 20px;\n  animation-name: init;\n  animation-duration: 1s;\n  animation-duration: linear;\n  @keyframes init {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Logo = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 20px;\n  cursor: pointer;\n`;\n\nconst PostTitle = styled.input`\n  width: 100%;\n  color: #777;\n  border: 0;\n  border-bottom: 1px solid #eee;\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid #777;\n  }\n  font-size: 36px;\n  margin-bottom: 20px;\n`;\n\nconst Submit = styled(Button)`\n  margin: 0;\n  margin-top: 20px;\n  float: right;\n`;\n\nconst Editor = styled(MDEditor)`\n  height: calc(100vh - 260px) !important;\n`;\n\ninterface Props {\n  isEdit: boolean;\n  postContent: postEditData;\n  setPostContent: React.Dispatch<React.SetStateAction<postEditData>>;\n  onPreview: () => void;\n}\n\nconst OnWrite = ({ isEdit, postContent, setPostContent, onPreview }: Props) => {\n  const userData = useRecoilValue(loginData);\n  const [isDragging, setIsDragging] = useState(false);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const imageRef = useRef<HTMLInputElement>(null);\n  const { openModal } = useModal();\n  const { openToast } = useToast();\n  const navigate = useNavigate();\n  const onTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value },\n    } = event;\n    setPostContent((prev) => ({\n      ...prev,\n      title: value,\n    }));\n  };\n\n  // drag & drop image\n  const onDragEnter = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setIsDragging(true);\n  };\n  const onDragLeave = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setIsDragging(false);\n  };\n  const onDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.dataTransfer.files) {\n      setIsDragging(true);\n    }\n  };\n  const onDrop = async (event: DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const file = event.dataTransfer.files[0];\n    if (!file?.type.includes(\"image/\")) {\n      setIsDragging(false);\n      return;\n    }\n    onImgUpload(file);\n  };\n\n  const uploadImgCommand: ICommand = {\n    name: \"image\",\n    keyCommand: \"image\",\n    buttonProps: { \"aria-label\": \"Insert image\" },\n    icon: (\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 520 520\">\n        <path\n          fill=\"currentColor\"\n          d=\"M5,350h340V0H5V350z M25,330v-62.212h300V330H25z M179.509,247.494H60.491L120,171.253L179.509,247.494z M176.443,211.061l33.683-32.323l74.654,69.05h-79.67L176.443,211.061z M325,96.574c-6.384,2.269-13.085,3.426-20,3.426 c-33.084,0-60-26.916-60-60c0-6.911,1.156-13.612,3.422-20H325V96.574z M25,20h202.516C225.845,26.479,225,33.166,225,40 c0,44.112,35.888,80,80,80c6.837,0,13.523-0.846,20-2.518v130.306h-10.767l-104.359-96.526l-45.801,43.951L120,138.748 l-85.109,109.04H25V20z\"\n        ></path>\n      </svg>\n    ),\n    execute: async () => {\n      imageRef.current?.click();\n    },\n  };\n\n  const onInputImgChange = () => {\n    imageRef.current?.files && onImgUpload(imageRef.current.files[0]);\n  };\n\n  const onImgUpload = async (image: File) => {\n    const textarea = inputRef.current?.querySelector(\"textarea\") as HTMLTextAreaElement;\n    if (!textarea) return;\n    try {\n      const imageLink = await uploadImg(image, `$image/${userData.uid}/${uuidv4()}`);\n      const currentText = postContent.postData;\n      const textCursor = textarea.selectionStart;\n      setPostContent((prev) => ({\n        ...prev,\n        postData: `${currentText.slice(0, textCursor)}![](${imageLink})${currentText.slice(\n          textCursor\n        )}`,\n        imageList: [...prev.imageList, imageLink],\n      }));\n    } catch (error) {\n      console.log(error);\n      openToast(\"Error\", \"Image upload failed.\", \"danger\");\n    } finally {\n      if (imageRef.current) imageRef.current.value = \"\";\n      setIsDragging(false);\n    }\n  };\n\n  const onExit = () => {\n    const warningTitle = \"Warning\";\n    const warningMessage = \"Post data will not be saved when you leave the window.\";\n    const confirmCallback = () => {\n      navigate(\"/\");\n    };\n    openModal(warningTitle, warningMessage, confirmCallback, true);\n  };\n\n  return (\n    <OnDragCheck className={isDragging ? \"OnWrite Drag\" : \"OnWrite\"}>\n      <header>\n        <Navbar bg=\"light\">\n          <Container>\n            <Navbar.Brand>\n              <Logo src={blogIcon} alt=\"blog logo\" onClick={onExit} />\n              {isEdit ? \"Edit post\" : \"Write your Story\"}\n            </Navbar.Brand>\n          </Container>\n        </Navbar>\n      </header>\n      <WriteContainer\n        sm={{ span: 10, offset: 1 }}\n        lg={{ span: 8, offset: 2 }}\n        xxl={{ span: 6, offset: 3 }}\n        className=\"OnWrite\"\n      >\n        <section\n          onDragEnter={onDragEnter}\n          onDragLeave={onDragLeave}\n          onDragOver={onDragOver}\n          onDrop={onDrop}\n        >\n          <input\n            hidden\n            type=\"file\"\n            accept=\"image/*\"\n            ref={imageRef}\n            defaultValue={\"\"}\n            onChange={onInputImgChange}\n          />\n          <PostTitle\n            placeholder=\"Write post title\"\n            value={postContent.title}\n            onChange={onTitleChange}\n            maxLength={50}\n            required\n          />\n          <div ref={inputRef}>\n            <Editor\n              data-color-mode=\"light\"\n              value={postContent.postData}\n              commands={[\n                commands.title,\n                commands.bold,\n                commands.italic,\n                commands.strikethrough,\n                commands.quote,\n                commands.link,\n                uploadImgCommand,\n                commands.code,\n                commands.fullscreen,\n              ]}\n              onChange={(value = \"\") => {\n                setPostContent((prev) => ({\n                  ...prev,\n                  postData: value,\n                }));\n              }}\n            />\n          </div>\n          <Submit onClick={onPreview}>{isEdit ? \"Edit\" : \"Write up\"}</Submit>\n        </section>\n      </WriteContainer>\n    </OnDragCheck>\n  );\n};\n\nexport default OnWrite;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Stack, Col, Image, Button, Form, InputGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { uuidv4 } from \"@firebase/util\";\n\nimport { useToast } from \"../../states/ToastState\";\n\nimport altImage from \"../../assets/images/altThumbnail.jpg\";\nimport { deleteImg, uploadImg } from \"../../logic/getSetImage\";\n\nconst PreviewContainer = styled.div`\n  display: flex;\n  position: absolute;\n  visibility: hidden;\n  background-color: #fff;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n\n  &.open {\n    visibility: visible;\n    animation-name: open;\n    animation-duration: 0.5s;\n    animation-duration: linear;\n    @keyframes open {\n      0% {\n        height: 0%;\n      }\n      100% {\n        height: 100%;\n      }\n    }\n  }\n\n  &.close {\n    visibility: hidden;\n    animation-name: close;\n    animation-duration: 0.5s;\n    animation-duration: linear;\n    @keyframes close {\n      0% {\n        height: 100%;\n        visibility: visible;\n      }\n      99.9% {\n        height: 0.1%;\n        visibility: visible;\n      }\n      100% {\n        height: 0%;\n        visibility: hidden;\n      }\n    }\n  }\n`;\n\nconst LeftContainer = styled(Col)`\n  padding: 0 30px;\n  border-right: 1px solid #eee;\n  align-self: center;\n`;\n\nconst RightContainer = styled(Col)`\n  padding: 0 30px;\n  align-self: center;\n`;\n\nconst ButtonContainer = styled(Stack)`\n  float: right;\n`;\nconst ImageContainer = styled(Image)`\n  background-color: #eee;\n  width: 100%;\n  aspect-ratio: 16 / 9;\n  object-fit: cover;\n  object-position: center center;\n`;\n\nconst ThumbnailText = styled(InputGroup)`\n  height: 200px;\n`;\n\ninterface Props {\n  isEdit: boolean;\n  isPreview: boolean;\n  postContent: postEditData;\n  setPostContent: React.Dispatch<React.SetStateAction<postEditData>>;\n  onPreview: () => void;\n  onSubmit: () => void;\n}\n\nconst Preview = ({\n  isEdit,\n  isPreview,\n  postContent,\n  setPostContent,\n  onPreview,\n  onSubmit,\n}: Props) => {\n  const imgRef = useRef<HTMLInputElement | null>(null);\n  const [firstOpen, setFirstOpen] = useState(false);\n  const { openToast } = useToast();\n\n  useEffect(() => {\n    isPreview && setFirstOpen(true);\n  }, [isPreview]);\n\n  const onImgUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { files },\n    } = event;\n    if (!files) throw console.log(\"no image files\");\n    try {\n      const uploadURL = await uploadImg(files[0], `$thumbnail/${uuidv4()}`);\n      setPostContent((prev) => ({\n        ...prev,\n        thumbnailImgLink: uploadURL,\n      }));\n    } catch (error) {\n      console.log(error);\n      openToast(\"Error\", \"Image upload failed.\", \"danger\");\n    }\n  };\n\n  const onUpload = () => {\n    imgRef.current?.click();\n  };\n\n  const onDelete = () => {\n    postContent.thumbnailImgLink && deleteImg(postContent.thumbnailImgLink);\n    setPostContent((prev) => ({\n      ...prev,\n      thumbnailImgLink: \"\",\n    }));\n    if (imgRef.current?.value) imgRef.current.value = \"\";\n  };\n\n  const onEditDescription = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const {\n      target: { value },\n    } = event;\n    setPostContent((prev) => ({\n      ...prev,\n      thumbnailData: value,\n    }));\n  };\n\n  return (\n    <PreviewContainer className={`Preview ${isPreview ? \"open\" : firstOpen ? \"close\" : \"\"}`}>\n      <LeftContainer md={{ span: 5, offset: 1 }} xxl={{ span: 4, offset: 2 }}>\n        <Stack gap={3}>\n          <h3>Preview</h3>\n          <ImageContainer\n            src={postContent.thumbnailImgLink ? postContent.thumbnailImgLink : altImage}\n            alt=\"Thumbnail\"\n            thumbnail={true}\n          ></ImageContainer>\n          <input\n            hidden\n            type=\"file\"\n            accept=\"image/*\"\n            ref={imgRef}\n            src={postContent.thumbnailImgLink}\n            onChange={onImgUpload}\n          />\n          <Stack gap={2} direction=\"horizontal\">\n            <Button onClick={onUpload}>Upload Image</Button>\n            <Button\n              variant=\"outline-primary\"\n              onClick={onDelete}\n              hidden={!postContent.thumbnailImgLink}\n            >\n              Delete Image\n            </Button>\n          </Stack>\n          <h3>{postContent.title}</h3>\n          <ThumbnailText size=\"lg\">\n            <Form.Control\n              as=\"textarea\"\n              value={postContent.thumbnailData}\n              maxLength={150}\n              onChange={onEditDescription}\n            />\n          </ThumbnailText>\n          <p>{postContent.thumbnailData.length}/150</p>\n        </Stack>\n      </LeftContainer>\n      <RightContainer xs={0} md={5} xxl={4}>\n        <ButtonContainer gap={3} direction=\"horizontal\">\n          <Button variant=\"outline-primary\" onClick={onPreview}>\n            Cancel\n          </Button>\n          <Button onClick={onSubmit}>{isEdit ? \"Edit\" : \"Write Up\"}</Button>\n        </ButtonContainer>\n      </RightContainer>\n    </PreviewContainer>\n  );\n};\n\nexport default Preview;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { isLoadingData } from \"../states/LoadingState\";\nimport { loginData } from \"../states/LoginState\";\nimport { useModal } from \"../states/ModalState\";\nimport { getAuth } from \"firebase/auth\";\n\nimport { addPost, getPostData, updatePost } from \"../logic/getSetPostInfo\";\nimport { useOnPreventLeave } from \"../logic/useOnPreventLeave\";\n\nimport AlertModal from \"../components/Share/AlertModal\";\nimport OnWrite from \"../components/Write/OnWrite\";\nimport Preview from \"../components/Write/Preview\";\nimport Loading from \"../components/Share/Loading\";\nimport AlertToast from \"../components/Share/Toast\";\n\nconst Write = () => {\n  const [loading, setLoading] = useRecoilState(isLoadingData);\n  const userData = useRecoilValue(loginData);\n  const [postContent, setPostContent] = useState<postEditData>({\n    title: \"\",\n    postData: \"**Write your post**\",\n    thumbnailImgLink: \"\",\n    thumbnailData: \"\",\n    imageList: [],\n  });\n  const [isPreview, setIsPreview] = useState(false);\n  const { openModal } = useModal();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  useOnPreventLeave();\n  useEffect(() => {\n    if (params[\"*\"]) {\n      setLoading(true);\n      getPostData(params[\"*\"] as string)\n        .then((post) => {\n          const auth = getAuth();\n          if (post.createdBy !== auth.currentUser?.uid) {\n            const userError = {\n              name: \"Permission Denied\",\n              code: \"No_Permission\",\n            };\n            throw userError;\n          }\n          setPostContent((prev) => ({\n            ...prev,\n            title: post.title,\n            postData: post.detail,\n            thumbnailImgLink: post.thumbnailImageURL,\n            thumbnailData: post.thumbnailData,\n            imageList: post.imageList,\n          }));\n        })\n        .catch((error) => {\n          console.log(error);\n          const errorTitle = \"Post Loading failed\";\n          let errorText;\n          switch (error?.code) {\n            case \"No_PostData\":\n              errorText = \"You entered wrong url link\";\n              break;\n            case \"No_Permission\":\n              errorText = \"You don't have permission on this post.\";\n              break;\n            default:\n              errorText = \"Something wrong, try again later.\";\n              break;\n          }\n          openModal(errorTitle, errorText, () => {\n            navigate(\"/\");\n          });\n        })\n        .finally(() => setLoading(false));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = async () => {\n    try {\n      let postID: string;\n      if (params[\"*\"]) {\n        await updatePost(params[\"*\"], postContent);\n        postID = params[\"*\"];\n      } else {\n        postID = await addPost(postContent, userData);\n      }\n      navigate(`/home/${userData.nickname}/${postID}`);\n    } catch (error) {\n      console.log(error);\n      const errorTitle = \"Post Submit failed\";\n      const errorText = \"Something wrong, try again later.\";\n      openModal(errorTitle, errorText);\n    }\n  };\n\n  const onPreview = () => {\n    const reg = /[`\\n|\\r|~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gim;\n    !postContent.thumbnailData &&\n      setPostContent((prev) => ({\n        ...prev,\n        thumbnailData: postContent.postData.replace(reg, \"\").substring(0, 150),\n      }));\n    setIsPreview((prev) => !prev);\n  };\n\n  return (\n    <div className=\"Write\">\n      {loading ? <Loading /> : null}\n      <AlertModal />\n      <AlertToast />\n      <Preview\n        isEdit={Boolean(params[\"*\"])}\n        isPreview={isPreview}\n        postContent={postContent}\n        setPostContent={setPostContent}\n        onPreview={onPreview}\n        onSubmit={onSubmit}\n      />\n      <OnWrite\n        isEdit={Boolean(params[\"*\"])}\n        postContent={postContent}\n        setPostContent={setPostContent}\n        onPreview={onPreview}\n      />\n    </div>\n  );\n};\n\nexport default Write;\n","import { useEffect } from \"react\";\n\nexport const useOnPreventLeave = () => {\n  const listener = (event: BeforeUnloadEvent) => {\n    event.preventDefault();\n    event.returnValue = \"\";\n  };\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", listener);\n    return () => {\n      window.removeEventListener(\"beforeunload\", listener);\n    };\n  }, []);\n};\n","import React from \"react\";\nimport { useCallback } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\n\ntype ModalType = {\n  isOpen: boolean;\n  title?: string;\n  content: string | JSX.Element;\n  closeCallBack?: () => any;\n  isConfirm: boolean;\n  buttonColor?: BootStrapColor;\n};\n\nexport const modalState = atom<ModalType>({\n  key: \"modalState\",\n  default: {\n    isOpen: false,\n    title: \"\",\n    content: \"\",\n    closeCallBack: () => {},\n    isConfirm: false,\n    buttonColor: \"primary\",\n  },\n});\n\nexport const useModal = () => {\n  const [modalDataState, setModalDataState] = useRecoilState(modalState);\n\n  const openModal = useCallback(\n    (\n      title: string,\n      content: string | JSX.Element,\n      closeCallBack?: () => any,\n      isConfirm?: boolean,\n      buttonColor?: BootStrapColor\n    ) => {\n      let contentElement: JSX.Element;\n      if (typeof content === \"string\") {\n        contentElement = <p>{content}</p>;\n      } else {\n        contentElement = content;\n      }\n      setModalDataState({\n        isOpen: true,\n        title: title,\n        content: contentElement,\n        closeCallBack: closeCallBack,\n        isConfirm: isConfirm ?? false,\n        buttonColor: buttonColor ?? \"primary\",\n      });\n    },\n    [setModalDataState]\n  );\n\n  const closeModal = useCallback(() => {\n    setModalDataState((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n  }, [setModalDataState]);\n\n  const closeModalWithCallback = useCallback(() => {\n    if (modalDataState.closeCallBack) modalDataState.closeCallBack();\n    setModalDataState((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n  }, [modalDataState, setModalDataState]);\n\n  return { modalDataState, openModal, closeModal, closeModalWithCallback };\n};\n","import { useCallback } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\n\ninterface ToastType {\n  isOpen: boolean;\n  title: string;\n  content: string;\n  background: BootStrapColor;\n}\n\nexport const toastState = atom<ToastType>({\n  key: \"toastState\",\n  default: {\n    isOpen: false,\n    title: \"\",\n    content: \"\",\n    background: \"primary\",\n  },\n});\n\nexport const useToast = () => {\n  const [toastDataState, setToastDataState] = useRecoilState(toastState);\n  const openToast = useCallback(\n    (title: string, content: string, background?: BootStrapColor) => {\n      setToastDataState({\n        isOpen: true,\n        title: title,\n        content: content,\n        background: background ?? \"primary\",\n      });\n    },\n    [setToastDataState]\n  );\n\n  const closeToast = useCallback(() => {\n    setToastDataState((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n  }, [setToastDataState]);\n\n  return { toastDataState, openToast, closeToast };\n};\n"],"names":["ModalDialog","styled","Modal","useModal","modalDataState","closeModal","closeModalWithCallback","size","centered","show","isOpen","onHide","isConfirm","className","closeButton","title","content","variant","onClick","hidden","buttonColor","ToastContainer","Toast","useToast","toastDataState","closeToast","onClose","bg","background","delay","autohide","OnDragCheck","WriteContainer","Col","Logo","PostTitle","Submit","Button","Editor","MDEditor","isEdit","postContent","setPostContent","onPreview","userData","useRecoilValue","loginData","useState","isDragging","setIsDragging","inputRef","useRef","imageRef","openModal","openToast","navigate","useNavigate","onDrop","event","preventDefault","stopPropagation","file","dataTransfer","files","type","includes","onImgUpload","uploadImgCommand","name","keyCommand","buttonProps","icon","width","height","viewBox","fill","d","execute","current","click","image","textarea","querySelector","uploadImg","uid","uuidv4","imageLink","currentText","postData","textCursor","selectionStart","prev","slice","imageList","console","log","value","Navbar","Container","src","blogIcon","alt","sm","span","offset","lg","xxl","onDragEnter","onDragLeave","onDragOver","accept","ref","defaultValue","onChange","placeholder","target","maxLength","required","commands","PreviewContainer","LeftContainer","RightContainer","ButtonContainer","Stack","ImageContainer","Image","ThumbnailText","InputGroup","isPreview","onSubmit","imgRef","firstOpen","setFirstOpen","useEffect","uploadURL","thumbnailImgLink","md","gap","thumbnail","direction","deleteImg","Form","as","thumbnailData","length","xs","useRecoilState","isLoadingData","loading","setLoading","setIsPreview","params","useParams","listener","returnValue","window","addEventListener","removeEventListener","useOnPreventLeave","getPostData","then","post","auth","getAuth","createdBy","currentUser","code","detail","thumbnailImageURL","catch","error","errorText","finally","updatePost","postID","addPost","nickname","reg","replace","substring","Loading","AlertModal","Boolean","modalState","atom","key","default","closeCallBack","setModalDataState","useCallback","toastState","setToastDataState"],"sourceRoot":""}