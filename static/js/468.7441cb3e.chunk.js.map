{"version":3,"file":"static/js/468.7441cb3e.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement();\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["isReactNative","global","navigator","product","isDOM","document","useLayoutEffect","useEffect","usePrevious","value","ref","useRef","current","dataAttr","property","dataProp","activeElement","doc","ownerDocument","active","nodeName","e","body","contains","context","node","compareDocumentPosition","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","resolveContainerRef","getBoundingClientRect","children","inProp","in","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","useEventCallback","combinedRef","useMergedRefs","child","cloneElement","ImperativeTransition","onEntered","transition","useState","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","error","renderTransition","Component","runTransition","props","_jsx","Object","assign","NoopTransition","manager","_excluded","useModalManager","provided","modalManager","ModalManager","getManager","modal","dialog","backdrop","add","remove","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","container","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","dialogProps","tabIndex","React","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","getSharedManager","p","classNames"],"sourceRoot":""}