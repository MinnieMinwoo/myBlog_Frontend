{"version":3,"file":"static/js/794.8d2369f6.chunk.js","mappings":"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","sources":["components/Share/AlertModal.tsx","components/Setting/ProfileImageEdit.tsx","components/Setting/ProfileInfoEdit.tsx","components/Setting/SettingData.tsx","routes/Setting.tsx","states/ModalState.tsx","styles/PageView.ts","../node_modules/react-bootstrap/esm/Image.js"],"sourcesContent":["import React from \"react\";\nimport { useModal } from \"../../states/ModalState\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ModalDialog = styled(Modal.Dialog)`\n  margin: 0;\n`;\n\nconst AlertModal = () => {\n  const { modalDataState, closeModal, closeModalWithCallback } = useModal();\n\n  return (\n    <Modal\n      size=\"lg\"\n      centered\n      show={modalDataState.isOpen}\n      onHide={modalDataState.isConfirm ? closeModal : closeModalWithCallback}\n      className=\"AlertModal\"\n    >\n      <ModalDialog>\n        <Modal.Header closeButton>\n          <Modal.Title>{modalDataState.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{modalDataState.content}</Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={modalDataState.isConfirm ? closeModal : closeModalWithCallback}\n          >\n            {modalDataState.isConfirm ? \"Cancel\" : \"Close\"}\n          </Button>\n          <Button\n            hidden={!modalDataState.isConfirm}\n            variant={modalDataState.buttonColor}\n            onClick={closeModalWithCallback}\n          >\n            Confirm\n          </Button>\n        </Modal.Footer>\n      </ModalDialog>\n    </Modal>\n  );\n};\n\nexport default AlertModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { loginData } from \"../../states/LoginState\";\nimport { updateUserImage } from \"../../logic/getSetUserInfo\";\nimport { Stack, Button, Image } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ImgContainer = styled.div`\n  flex-basis: 210px;\n  padding: 0 24px;\n  border-right: 1px solid #eee;\n`;\n\nconst ProfileImg = styled(Image)`\n  width: 128px;\n  height: 128px;\n  margin: auto;\n`;\nconst ProfileImageEdit = () => {\n  const [userData, setUserData] = useRecoilState(loginData);\n  const [imageLink, setImageLink] = useState(\"\");\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    if (userData.photoURL) setImageLink(userData.photoURL);\n  }, [userData.photoURL]);\n\n  const onChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!userData.uid) throw window.alert(\"no user uid data\");\n    if (!event.target.files) throw window.alert(\"no files exist\");\n    const imageURL = await updateUserImage(\n      Boolean(userData.photoURL),\n      userData.uid,\n      event.target.files[0]\n    );\n    setUserData((prev) => ({\n      ...prev,\n      photoURL: imageURL,\n    }));\n  };\n\n  const onUpload = () => {\n    inputRef.current?.click();\n  };\n\n  const onDelete = () => {\n    if (inputRef.current?.value) inputRef.current.value = \"\";\n  };\n\n  return (\n    <ImgContainer className=\"ProfileImageEdit\">\n      <Stack gap={3}>\n        <ProfileImg src={imageLink} alt=\"Profile\" roundedCircle={true} thumbnail={true} />\n        <input\n          hidden\n          type=\"file\"\n          accept=\"image/*\"\n          ref={inputRef}\n          src={imageLink}\n          onChange={onChange}\n        />\n        <Button onClick={onUpload}>Upload Image</Button>\n        <Button variant=\"outline-primary\" onClick={onDelete}>\n          Delete Image\n        </Button>\n      </Stack>\n    </ImgContainer>\n  );\n};\n\nexport default ProfileImageEdit;\n","import React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { updateUserProfile } from \"../../logic/getSetUserInfo\";\nimport { loginData } from \"../../states/LoginState\";\nimport { Container, Form, Button, Stack } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst ProfileInfo = styled(Container)`\n  padding: 0 24px;\n`;\n\nconst Nickname = styled.p`\n  font-size: 36px;\n  font-weight: 500;\n  margin: 0;\n  color: #111;\n`;\n\nconst Description = styled.div`\n  color: #333;\n`;\n\nconst SelectButton = styled(Button)`\n  width: 96px;\n`;\n\nconst ProfileInfoEdit = () => {\n  const [userData, setUserData] = useRecoilState(loginData);\n  const [hidden, setHidden] = useState(true);\n  const [nickname, setNickname] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  useEffect(() => {\n    setNickname(userData.nickname ?? \"\");\n    setDescription(userData.description ?? \"\");\n  }, [userData]);\n  const onToggle = () => {\n    setHidden((prev) => !prev);\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"nickname\") setNickname(value);\n    else if (name === \"description\") setDescription(value);\n  };\n\n  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!userData.uid) throw window.alert(\"no user uid data\");\n    await updateUserProfile(userData.uid, nickname, description);\n    setUserData((prev) => ({\n      ...prev,\n      nickname: nickname,\n      description: description,\n    }));\n    setHidden(true);\n  };\n\n  return (\n    <ProfileInfo>\n      <div hidden={!hidden}>\n        <Stack gap={2}>\n          <Nickname>{userData.nickname}</Nickname>\n          <Description>{userData.description}</Description>\n          <SelectButton variant=\"outline-primary\" onClick={onToggle}>\n            Edit\n          </SelectButton>\n        </Stack>\n      </div>\n      <Form hidden={hidden} onSubmit={onSubmit}>\n        <Stack gap={3}>\n          <Form.Group controlId=\"nickname\">\n            <Form.Label>Nickname</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"nickname\"\n              placeholder=\"nickname\"\n              value={nickname}\n              maxLength={20}\n              onChange={onChange}\n              required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"description\"\n              value={description}\n              maxLength={100}\n              onChange={onChange}\n            />\n          </Form.Group>\n          <SelectButton type=\"submit\">Save</SelectButton>\n        </Stack>\n      </Form>\n    </ProfileInfo>\n  );\n};\n\nexport default ProfileInfoEdit;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nconst SettingContainer = styled.div`\n  border-bottom: 1px solid #eee;\n  padding: 32px 24px;\n  h3 {\n    width: 170px;\n    display: inline-block;\n    font-size: 20px;\n    color: #111;\n  }\n  span {\n    color: #333;\n  }\n  button {\n    float: right;\n    width: 96px;\n  }\n  p {\n    margin-top: 16px;\n    margin-bottom: 0px;\n    font-size: 14px;\n    color: #777;\n  }\n`;\n\ninterface Props {\n  title: string;\n  description: string;\n  buttonMessage: string;\n  onClick: () => void;\n  currentData?: string;\n  buttonColor?: BootStrapColor;\n}\n\nconst SettingData = ({\n  title,\n  description,\n  buttonMessage,\n  onClick,\n  currentData,\n  buttonColor,\n}: Props) => {\n  return (\n    <SettingContainer>\n      <h3>{title}</h3>\n      <span>{currentData}</span>\n      <Button variant={buttonColor ?? \"primary\"} onClick={onClick}>\n        {buttonMessage}\n      </Button>\n      <p>{description}</p>\n    </SettingContainer>\n  );\n};\n\nexport default SettingData;\n","import React, { useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Form, Stack } from \"react-bootstrap\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useModal } from \"../states/ModalState\";\nimport { loginData } from \"../states/LoginState\";\nimport { isLoadingData } from \"../states/LoadingState\";\nimport { Navbar, Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nimport { deleteUserData } from \"../logic/getSetUserInfo\";\n\nimport Loading from \"../components/Share/Loading\";\nimport ProfileImageEdit from \"../components/Setting/ProfileImageEdit\";\nimport ProfileInfoEdit from \"../components/Setting/ProfileInfoEdit\";\nimport SettingData from \"../components/Setting/SettingData\";\nimport AlertModal from \"../components/Share/AlertModal\";\nimport { CenterAlign } from \"../styles/PageView\";\nimport blogIcon from \"../assets/images/logo.png\";\n\nconst ProfileEdit = styled(CenterAlign)`\n  border-bottom: 1px solid #eee;\n  padding: 30px 0;\n`;\n\nconst SettingEdit = styled(CenterAlign)``;\n\nconst Logo = styled.img`\n  width: 40px;\n  height: 40px;\n  margin-right: 20px;\n  cursor: pointer;\n`;\n\nconst Setting = () => {\n  const [userData, setUserData] = useRecoilState(loginData);\n  const loading = useRecoilValue(isLoadingData);\n  const { openModal, closeModal } = useModal();\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n\n  const onQuit = async () => {\n    openModal(\n      \"Warning\",\n      <>\n        <p>Please enter your password if you really want leave.</p>\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"enter your password\"\n            autoComplete=\"off\"\n            ref={passwordRef}\n            required\n          />\n        </Form>\n      </>,\n      async () => {\n        if (!userData.uid) throw console.log(\"No userData\");\n        if (!passwordRef.current?.value) return;\n        const password = passwordRef.current.value;\n        try {\n          await deleteUserData(userData.uid, password);\n          closeModal();\n          setUserData({ isLoggedIn: false });\n          openModal(\"Withdrawal complete\", \"Your withdrawal has been completed\", () =>\n            navigate(\"/\")\n          );\n        } catch (error) {\n          if (error) console.log(error);\n          openModal(\"Error\", \"Withdrawal failed\");\n        }\n      },\n      true,\n      \"danger\"\n    );\n  };\n\n  return (\n    <>\n      {loading ? <Loading /> : null}\n      <AlertModal />\n      <header>\n        <Navbar bg=\"light\">\n          <Container>\n            <Navbar.Brand>\n              <Link to=\"/\">\n                <Logo src={blogIcon} alt=\"blog logo\" />\n              </Link>\n              Setting\n            </Navbar.Brand>\n          </Container>\n        </Navbar>\n      </header>\n      <main className=\"EditProfile\">\n        <ProfileEdit as=\"section\">\n          <Stack direction=\"horizontal\">\n            <ProfileImageEdit />\n            <ProfileInfoEdit />\n          </Stack>\n        </ProfileEdit>\n        <SettingEdit as=\"section\">\n          <SettingData\n            title=\"Email address\"\n            description=\"Email address that receives authentication or notification.\n            \"\n            buttonMessage=\"Change\"\n            currentData={userData.email}\n            onClick={() => {}}\n          />\n          <SettingData\n            title=\"Withdrawal\"\n            description=\"All posts and comments you created upon withdrawal will be deleted and will not be\n            recovered.\n            \"\n            buttonMessage=\"Quit\"\n            buttonColor=\"danger\"\n            onClick={onQuit}\n          />\n        </SettingEdit>\n      </main>\n    </>\n  );\n};\n\nexport default Setting;\n","import React from \"react\";\nimport { useCallback } from \"react\";\nimport { atom, useRecoilState } from \"recoil\";\n\ntype ModalType = {\n  isOpen: boolean;\n  title?: string;\n  content: string | JSX.Element;\n  closeCallBack?: () => any;\n  isConfirm: boolean;\n  buttonColor?: BootStrapColor;\n};\n\nexport const modalState = atom<ModalType>({\n  key: \"modalState\",\n  default: {\n    isOpen: false,\n    title: \"\",\n    content: \"\",\n    closeCallBack: () => {},\n    isConfirm: false,\n    buttonColor: \"primary\",\n  },\n});\n\nexport const useModal = () => {\n  const [modalDataState, setModalDataState] = useRecoilState(modalState);\n\n  const openModal = useCallback(\n    (\n      title: string,\n      content: string | JSX.Element,\n      closeCallBack?: () => any,\n      isConfirm?: boolean,\n      buttonColor?: BootStrapColor\n    ) => {\n      let contentElement: JSX.Element;\n      if (typeof content === \"string\") {\n        contentElement = <p>{content}</p>;\n      } else {\n        contentElement = content;\n      }\n      setModalDataState({\n        isOpen: true,\n        title: title,\n        content: contentElement,\n        closeCallBack: closeCallBack,\n        isConfirm: isConfirm ?? false,\n        buttonColor: buttonColor ?? \"primary\",\n      });\n    },\n    [setModalDataState]\n  );\n\n  const closeModal = useCallback(() => {\n    setModalDataState((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n  }, [setModalDataState]);\n\n  const closeModalWithCallback = useCallback(() => {\n    if (modalDataState.closeCallBack) modalDataState.closeCallBack();\n    setModalDataState((prev) => ({\n      ...prev,\n      isOpen: false,\n    }));\n  }, [modalDataState, setModalDataState]);\n\n  return { modalDataState, openModal, closeModal, closeModalWithCallback };\n};\n","import styled from \"styled-components\";\n\nexport const CenterAlign = styled.div`\n  @media (min-width: 1080px) {\n    width: 80vw;\n    margin-left: 10vw;\n  }\n`;\n\nexport const FooterAlign = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  overflow-x: hidden;\n  section {\n    flex: 1;\n  }\n`;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;"],"names":["ModalDialog","styled","Modal","useModal","modalDataState","closeModal","closeModalWithCallback","size","centered","show","isOpen","onHide","isConfirm","className","closeButton","title","content","variant","onClick","hidden","buttonColor","ImgContainer","ProfileImg","Image","useRecoilState","loginData","userData","setUserData","useState","imageLink","setImageLink","inputRef","useRef","useEffect","photoURL","onChange","event","uid","window","alert","target","files","updateUserImage","Boolean","imageURL","prev","Stack","gap","src","alt","roundedCircle","thumbnail","type","accept","ref","Button","current","click","value","ProfileInfo","Container","Nickname","Description","SelectButton","setHidden","nickname","setNickname","description","setDescription","name","onSubmit","preventDefault","updateUserProfile","Form","controlId","placeholder","maxLength","required","SettingContainer","buttonMessage","currentData","ProfileEdit","CenterAlign","SettingEdit","Logo","loading","useRecoilValue","isLoadingData","openModal","passwordRef","navigate","useNavigate","onQuit","e","autoComplete","console","log","password","deleteUserData","isLoggedIn","Loading","AlertModal","Navbar","bg","to","blogIcon","as","direction","email","modalState","atom","key","default","closeCallBack","setModalDataState","useCallback","FooterAlign","PropTypes","React","bsPrefix","fluid","rounded","props","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps"],"sourceRoot":""}